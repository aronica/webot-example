
              <p/><p>Write an efficient algorithm that searches for a value in an <i>m</i> x <i>n</i> matrix. This matrix has the following properties:</p>&#13;
&#13;
<p>&#13;
</p><ul>&#13;
<li>Integers in each row are sorted from left to right.</li>&#13;
<li>The first integer of each row is greater than the last integer of the previous row.</li>&#13;
</ul>&#13;
&#13;
&#13;
<p>&#13;
For example,</p>&#13;
<p>&#13;
Consider the following matrix:&#13;
</p>&#13;
<pre>&#13;
[&#13;
  [1,   3,  5,  7],&#13;
  [10, 11, 16, 20],&#13;
  [23, 30, 34, 50]&#13;
]&#13;
</pre>&#13;
&#13;
<p>Given <b>target</b> = <code>3</code>, return <code>true</code>.</p>
              
                <div id="tags" class="btn btn-xs btn-warning">Show Tags</div>
                <span class="hide">
                  
                  <a class="btn btn-xs btn-primary" href="/tag/array/">Array</a>
                  
                  <a class="btn btn-xs btn-primary" href="/tag/binary-search/">Binary Search</a>
                  
                </span>
              
            